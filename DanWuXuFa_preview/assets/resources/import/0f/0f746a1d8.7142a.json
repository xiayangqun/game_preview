[1,["c89m0XNRpI2qEsAhLShXXE","1brw/JvvpFnIvdrxpFCgMZ","31ngLve5xPMK2ELQItDfGf@ea6e2","31ngLve5xPMK2ELQItDfGf@8659b","31ngLve5xPMK2ELQItDfGf@40bdd","9bw/FF1e9LnrLjK36+ix9u@31269","80FrnBGRNFQ7Lxz49SItyL","31ngLve5xPMK2ELQItDfGf@29e0d","31ngLve5xPMK2ELQItDfGf@1759a","31ngLve5xPMK2ELQItDfGf@a81fb","31ngLve5xPMK2ELQItDfGf@dc018","31ngLve5xPMK2ELQItDfGf@ec06a","31ngLve5xPMK2ELQItDfGf@fcb2a","31ngLve5xPMK2ELQItDfGf@330d9","31ngLve5xPMK2ELQItDfGf@5aeb4","31ngLve5xPMK2ELQItDfGf@b3b58","31ngLve5xPMK2ELQItDfGf@aff0c","4fx+xB44pGR64rbkXLQNPD","4chHYzjmZGFK5L0VbR7pp6","00it2TVTRKRpoB65//zDD8","53oTZyylBBPZg39Um/1WQq@3c198","12Y9dMgWdJKJGmTiZyQR9H@2e76e","36vwgYKk9J8JR+pcDLCyW9","31ngLve5xPMK2ELQItDfGf@cd2d8","31ngLve5xPMK2ELQItDfGf@f031e","31ngLve5xPMK2ELQItDfGf@348b0","31ngLve5xPMK2ELQItDfGf@2be0b","31ngLve5xPMK2ELQItDfGf@c3d96","31ngLve5xPMK2ELQItDfGf@f5a9e","31ngLve5xPMK2ELQItDfGf@e47ba","31ngLve5xPMK2ELQItDfGf@4af43","31ngLve5xPMK2ELQItDfGf@881fe","31ngLve5xPMK2ELQItDfGf@814ce","31ngLve5xPMK2ELQItDfGf@f952a","31ngLve5xPMK2ELQItDfGf@f15a6","31ngLve5xPMK2ELQItDfGf@fcb8d","31ngLve5xPMK2ELQItDfGf@6715d","31ngLve5xPMK2ELQItDfGf@84917","31ngLve5xPMK2ELQItDfGf@d1580","31ngLve5xPMK2ELQItDfGf@92de8","31ngLve5xPMK2ELQItDfGf@95a1e","31ngLve5xPMK2ELQItDfGf@62a4b","31ngLve5xPMK2ELQItDfGf@2c5a2","31ngLve5xPMK2ELQItDfGf@9729b","31ngLve5xPMK2ELQItDfGf@6db66","31ngLve5xPMK2ELQItDfGf@0bb9f","31ngLve5xPMK2ELQItDfGf@155d5","f8vR/PTG5D2KOnVDA7gJW9","58dkpyxjBIIbWA90M9EkWT","e4A0MZHbdM2ZYsHQUb6bBz","53oTZyylBBPZg39Um/1WQq@ea9d8","b3+zKl5GVNCYkT1biw3FEF","96ymlxVzZNO440Q7xAmshP","bfF6gltJ1Mf51ws2ACAgRj","73RB6og+JIk74qhCrgjX8S","e3nOQYoGpI1LvayL5HGbl1","61GqamNPJN8olRok/c3NXu","14eCOz1TFCCp5e45F5FBog","70I2SkXDhIP4ZmdczP0JzD","19pquQhLtE7J9DNdaTA8F7","aap7Cm3W9APo3wkyJT2zLz@6018c","aap7Cm3W9APo3wkyJT2zLz@94bc6","aap7Cm3W9APo3wkyJT2zLz@bae40","aap7Cm3W9APo3wkyJT2zLz@7f3dc","d81tYydCNP/Lbvf3vqMqPN","53oTZyylBBPZg39Um/1WQq@b1662","53oTZyylBBPZg39Um/1WQq@438fe","53oTZyylBBPZg39Um/1WQq@4169d","49IH1HXfNBVIngCSyn57Zd","12yEMiRDVPj7ak7JvdM/qi@6c48a","53oTZyylBBPZg39Um/1WQq@dba77","2f3/XnuRdFSpuSOivTb+6v"],["node","_mesh","_effectAsset","_parent","root","target","data","redCirclePrefab","mainTexture","keyEliteEnemyCtrl","_skeleton"],[["cc.Node",["_name","_active","_prefab","_components","_lpos","_parent","_children","_lrot","_euler","_lscale"],1,4,9,5,1,2,5,5,5],["cc.MeshRenderer",["_shadowCastingMode","_name","node","__prefab","_materials","bakeSettings","_mesh"],1,1,4,3,4,6],["ec1544B+slBC4278lj2d8qF",["isCircle","xLength","radious","rotationY","zLength","_name","node","__prefab"],-3,1,4],["cc.Node",["_name","_components","_prefab","_lpos","_parent","_euler","_children","_lrot"],2,2,4,5,1,5,2,5],["cc.Material",["_name","_states","_defines","_techIdx","_props"],-1,12],["cc.Prefab",["_name"],2],["cc.Node",["_name","_parent","_children","_prefab","_lpos","_lrot","_euler"],2,1,9,4,5,5,5],["c6238g6egtF87RHsEYbJWTF",["_name","levelName0","levelName1","xLength","zLength","isLimit","lightColorTemperature","lightIlluminance","node","__prefab","tiledColor0","tiledColor1"],-5,1,4,5,5],["cc.CompPrefabInfo",["fileId"],2],["cc.PrefabInfo",["fileId","instance","targetOverrides","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["cc.SkeletalAnimation",["_name","node","__prefab","_clips","_sockets"],2,1,4,3,9],["cc.SkeletalAnimation.Socket",["path","target"],2,1],["cc.ModelBakeSettings",[],3],["95562MQCHxCtbic9itIgtCH",["node","__prefab","keyEliteEnemyCtrl"],3,1,4,1],["2ce7cDYl2ZPJbvkULqNNxl+",["node","__prefab","bulletPrefabs"],3,1,4,3],["cc.SkinnedMeshRenderer",["_shadowCastingMode","node","__prefab","_materials","bakeSettings","_skinningRoot"],2,1,4,3,4,1],["f8b42Y2iPVNlY6vPr7N0P1b",["damage","speed","hp","movingRate","sprintSpeed","sprintBufferTime","shotMultiple","jumpSpeed","jumpExplisonRange","spikeMultiple","spikeBornY","node","__prefab","skeleNode","bloodNode","headModelCom","bodyModelCom","spikeParams"],-8,1,4,1,1,1,1,4],["EnemyBulletParams",["damage","speed","flightDistance","type"],-1],["cc.Material",["_name","_props","_states","_defines"],-1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Mesh",["_native","_hash","_struct"],1,11],["cc.Skeleton",["_name","_hash","_joints","_bindposes"],0,12],["69284cDnENGy5Xqpt7g+K9P",["node","__prefab","redCirclePrefab"],3,1,4,6]],[[9,0,1,2,3,4,5,5],[8,0,2],[12,1],[4,0,1,2,4,4],[1,0,2,3,4,5,6,2],[2,2,6,7,2],[20,0,1,2,3],[0,0,5,6,2,4,7,8,2],[0,0,5,3,2,4,7,8,2],[0,0,5,3,2,4,7,9,8,2],[1,2,3,4,5,6,1],[0,0,5,3,2,4,2],[0,0,5,2,4,2],[6,0,1,2,3,4,5,6,2],[0,0,5,3,2,4,9,2],[2,0,3,1,4,6,7,5],[5,0,2],[11,0,1,2],[0,0,6,2,4,7,8,2],[1,1,0,2,3,4,5,6,3],[1,1,2,3,4,5,6,2],[2,5,2,6,7,3],[4,0,3,1,2,4,5],[0,0,6,3,2,2],[0,0,6,3,2,9,2],[0,0,1,5,6,3,2,3],[0,0,6,2,4,2],[0,0,1,5,3,2,3],[0,0,5,6,2,2],[0,0,3,2,2],[0,0,6,3,2,4,2],[3,0,6,1,2,3,2],[3,0,4,1,2,3,5,2],[3,0,4,1,2,3,7,5,2],[7,0,1,2,3,4,5,6,7,8,9,10,11,9],[10,0,1,2,3,4,2],[1,0,2,3,4,5,2],[2,0,1,4,6,7,4],[2,0,3,1,6,7,4],[13,0,1,2,1],[14,0,1,2,1],[15,0,1,2,3,4,5,2],[16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,12],[17,0,1,2,3,5],[18,0,1,2,3,5],[19,0,1,2,4],[21,0,1,2,3,4],[22,0,1,2,1]],[[[[16,"floor12"],[23,"floor12",[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40],[[34,"floor0<FloorCtrl>","灯塔湿地","Lighthouse wetland",50,50,false,3827,69000,-2,[1,"0bWo6o5lNMP71vfGBA09S3"],[4,4287354586],[4,4286368216]]],[0,"f3UAbBQaBIx5346SPOPR8s",null,null,null,-1,0]],[24,"skele",[-45,-46,-47,-48],[[35,"skele<SkeletalAnimation>",-44,[1,"900nvj6tZOA43BTekkYDZN"],[119,120,121,122],[[17,"RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1/mixamorig_Spine2",-41],[17,"RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1/mixamorig_Spine2/mixamorig_Neck/mixamorig_Head/mixamorig_HeadTop_End",-42],[17,"RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1/mixamorig_Spine2/mixamorig_RightShoulder/mixamorig_RightArm/mixamorig_RightForeArm",-43]]]],[0,"71W6i3bD1Pl5k5cyebjeQF",null,null,null,1,0],[1,0.7,0.7,0.7]],[31,"eliteEnemy1_0",[2,-50],[-49],[0,"6fdLK8IlZBDKSyTabCqmj5",null,null,null,1,0],[1,2.575,0,-4.939]],[18,"mixamorig_Hips",[-51,-52,-53],[0,"4a9TtqTIJKnKR3s/Wihyot",null,null,null,1,0],[1,0.09601891040802,0.280646085739136,-0.0117141148075461],[3,0.052928470217957144,-0.09211974615875139,-0.01111388675142285,0.9942781355985411],[1,5.926697542139766,-10.4921736957018,-1.8252998431620469]],[18,"mixamorig_Spine2",[-54,-55,-56],[0,"fbRwvZ7I9MWY26lGQ1WjYK",null,null,null,1,0],[1,-5.32907039908674e-17,0.215947523713112,7.10542719878232e-17],[3,0.03399912659357709,0.0016110065715561062,0.014916174196692387,0.9993092473283905],[1,3.8953109069214653,0.12642333649168433,1.7146193871080815]],[8,"yanshi3",1,[[4,1,-57,[1,"69kn5y93pEHbwtLkVf1A0O"],[0],[2],1],[5,1.5,-58,[1,"85AClnUxBDCI3lo25m21x3"]]],[0,"02VCLT4RdBQLFLfOYZAjfd",null,null,null,1,0],[1,-11.832,0.749,-2.833],[3,0,-0.038719175102457225,0,0.9992501315883753],[1,0,-4.438,0]],[9,"yanshi3",1,[[19,"yanshi3<MeshRenderer>",1,-59,[1,"8elhnZ5jBAsowxo5Hizynw"],[2],[2],3],[21,"yanshi3<FloorObstacleCtrl>",1.5,-60,[1,"8647jq/bpOjZh17+7LIGbL"]]],[0,"61SQoUb7tDiarqtWulVTl6",null,null,null,1,0],[1,-21.841,0.749,-14.021],[3,0,0.19381487149196538,0,0.9810381213737583],[1,0.784,0.784,0.784],[1,0,22.351,0]],[14,"dengta",1,[[4,1,-61,[1,"deEhmdRUFPzIt6/SY4g6DA"],[4,5,6],[2],7],[5,1.4,-62,[1,"6cvXwzktlBU61Vlq7qEzSw"]]],[0,"31boWUZfdHeZqZt0/I7YQK",null,null,null,1,0],[1,19.047,4.535,-10.207],[1,1.346,1.346,1.346]],[11,"shumu",1,[[4,1,-63,[1,"c5WsQ2Ij1CCI5tP6P0GX9E"],[8,9],[2],10],[5,0.5,-64,[1,"59Kl23DDpGDKHH/oK4Hlb8"]]],[0,"9bwXMDGe1PYYmz2awEseuU",null,null,null,1,0],[1,-8.159,1.178,20.538]],[8,"piaofuwu",1,[[19,"piaofuwu<MeshRenderer>",1,-65,[1,"0cJ8CUHINJxbErWbAFmSEK"],[11,12],[2],13],[21,"piaofuwu<FloorObstacleCtrl>",2,-66,[1,"3euzBM9/lOA7M5c6PrNG6S"]]],[0,"881ggS7H9IwpF85GvzT7Z4",null,null,null,1,0],[1,11.64,0.386,-9.085],[3,0,0.3731254257500071,0,0.9277809098374874],[1,0,43.817,0]],[8,"shumu",1,[[4,1,-67,[1,"0eETbp9HRBf7aYwim2p2ja"],[14,15],[2],16],[5,0.5,-68,[1,"47NyOrz0lBFqYrpEpOTJMf"]]],[0,"a5qP1TaBdFHbmZmzObUpZ+",null,null,null,1,0],[1,-11.236,1.21,22.511],[3,0,-0.19388336040081688,0,0.9810245881524514],[1,0,-22.359,0]],[8,"fengche",1,[[4,1,-69,[1,"6fl42YYYlJMoKFZavv0Wuk"],[17,18,19,20],[2],21],[5,0.5,-70,[1,"501c1HHD9J6J4ftnuDzrf0"]]],[0,"cdb6Wq3iNGT5X7GrMsFbzB",null,null,null,1,0],[1,14.91,3.134,-19.592],[3,0,-0.3464445265406962,0,0.9380704611221872],[1,0,-40.54,0]],[8,"shitou",1,[[4,1,-71,[1,"8a+5GMFV1HnryClMxVUagJ"],[22,23,24],[2],25],[5,3.2,-72,[1,"3a+yYWOSJG6Ik2XdGx4MWO"]]],[0,"9153eAP7NPHoCkFXC+71ev",null,null,null,1,0],[1,-13.933,1.781,-10.603],[3,0,0.6888544888316053,0,0.7248996435483659],[1,0,87.079,0]],[11,"shumu",1,[[4,1,-73,[1,"70mRpau+ZC1KR15MTWmUmq"],[26,27],[2],28],[5,0.5,-74,[1,"bdPmol0gNNtK5wA2kJwPCW"]]],[0,"a5qP1TaBdFHbmZmzObUpZ+",null,null,null,1,0],[1,-20.808,0.95,11.171]],[11,"shumu",1,[[4,1,-75,[1,"4a53vM2BhDorbFvUzpd+dh"],[29,30],[2],31],[5,0.5,-76,[1,"76bZUkub1PNId8NhDOcunE"]]],[0,"71Q2HVCnBEJqVk/4new2/f",null,null,null,1,0],[1,7.603,1.178,16.776]],[11,"shumu",1,[[4,1,-77,[1,"60FpemU9dJeYdSyq+rbiAZ"],[32,33],[2],34],[5,0.5,-78,[1,"7bG1BkuU9M24aW010BmCzR"]]],[0,"f1pTKmZWlNDoPHyOJZhunv",null,null,null,1,0],[1,-6.948,1.178,-5.807]],[9,"piaofuwu",1,[[4,1,-79,[1,"c4d+6QbpxKlbkQtfQIOWQO"],[35,36],[2],37],[5,2,-80,[1,"847oI0+cFLzr+O4K0dypFj"]]],[0,"ef2HrMWUFBQJhd1gHy7Qof",null,null,null,1,0],[1,8.4,0.386,8.32],[3,0,-0.2541630904796428,0,0.9671613740414973],[1,0.663,0.663,0.663],[1,0,-29.448,0]],[11,"shumu",1,[[4,1,-81,[1,"2439jS5JpDOpwspemHxgU+"],[38,39],[2],40],[5,0.5,-82,[1,"65dQlijy5DSYyv6yBEFbmt"]]],[0,"f2Yyft29VOxKRSrdegxOdx",null,null,null,1,0],[1,-3.34,1.178,-15.415]],[14,"shumu",1,[[4,1,-83,[1,"f3+ZBJ8QlO44U8OWcRg2tS"],[41,42],[2],43],[5,0.5,-84,[1,"5bENnc8g5Cu6q6vqPpn4xg"]]],[0,"d8j/7GKNJEvK6toHQTW+nG",null,null,null,1,0],[1,12.143,1.376,4.147],[1,1.313,1.313,1.313]],[11,"shumu",1,[[4,1,-85,[1,"71YqPAWE5P4aBp+qLfL99y"],[44,45],[2],46],[5,0.5,-86,[1,"1dLoPAnxhGW7Oz8H2ZHSlo"]]],[0,"d8j/7GKNJEvK6toHQTW+nG",null,null,null,1,0],[1,-21.7,1.178,-1.166]],[8,"xiaoqiao",1,[[4,1,-87,[1,"f5OmIgRLhLz59RJdF4Y6gP"],[47],[2],48],[15,false,149,7,2,-88,[1,"0aUwMhVd5N9YA9z+o/innX"]]],[0,"78xkUkLnxDCqTj1CSUX0g7",null,null,null,1,0],[1,9.3,0.232,-16.365],[3,0,0.963630453208623,0,0.26723837607825696],[1,0,149,0]],[8,"yanshi3",1,[[4,1,-89,[1,"6c4LUIhzxBHaevAwuSotrJ"],[49],[2],50],[5,1.5,-90,[1,"58r8VK+fZHNbWJ022jqwCg"]]],[0,"c3AX/USzpCz5loNe9p1OWQ",null,null,null,1,0],[1,-12.38,0.749,11.196],[3,0,0.2690038713813011,0,0.9631390954487687],[1,0,31.21,0]],[11,"shumu",1,[[4,1,-91,[1,"19ZbEjZdBCNIJ2km52j4rB"],[51,52],[2],53],[5,0.5,-92,[1,"d2nVArIN9HTaOv/uIiZzUj"]]],[0,"01ZLhhKkZOELu1zv18b0ZT",null,null,null,1,0],[1,-20.647,1.178,-7.224]],[8,"fang1",1,[[4,1,-93,[1,"54GPDzPB1P8oKPpxqtv7mB"],[54,55,56,57],[2],58],[37,false,7,5,-94,[1,"e2l6YRzQhFtYQuzIyg0klN"]]],[0,"be9bfLen9IhqtYCHTH1h3E",null,null,null,1,0],[1,18.432,3.296,21.035],[3,0,0.29237170472273677,0,0.9563047559630354],[1,0,34,0]],[14,"shumu",1,[[4,1,-95,[1,"9265lP6g9J3KMMtmsOmQ3p"],[63,64],[2],65],[5,0.5,-96,[1,"45T1nUFG9JoJXJxmbw/tNf"]]],[0,"e50yRyg7lF4bMXQVcfgnWB",null,null,null,1,0],[1,9.6,1.376,17.834],[1,1.313,1.313,1.313]],[8,"yanshi3",1,[[4,1,-97,[1,"9cSt2hTEtDTJxv3cTZC8CL"],[66],[2],67],[5,1.5,-98,[1,"66s+MNEz1Db6BHbpvEGmIX"]]],[0,"d85dRtWzJJ45nMZ/BruFah",null,null,null,1,0],[1,20.442,0.749,10.286],[3,0,-0.33205412453021776,0,0.9432603343629322],[1,0,-38.787,0]],[8,"chuan1",1,[[4,1,-99,[1,"762BdmsPhI2K28j9a/5Lup"],[78,79],[2],80],[38,false,69,4,-100,[1,"e7d7rf5ZFGYqyNV156tu/R"]]],[0,"54nflu38lJ4bRBBT05y0n0",null,null,null,1,0],[1,-16.172,4.745,19.77],[3,0,0.5664062369248328,0,0.8241261886220157],[1,0,69,0]],[8,"fanchaun2",1,[[4,1,-101,[1,"6353Io2jVN06KQkTP86j+v"],[83,84],[2],85],[15,false,290,2,6,-102,[1,"18Mbzg3ZZAZJkwWGN8EueZ"]]],[0,"6d/zVcMzlN9aXQcgEvdkuG",null,null,null,1,0],[1,3.765,2.906,5.227],[3,0,0.5735764363510459,0,-0.8191520442889919],[1,0,290,0]],[9,"chuan2",1,[[4,1,-103,[1,"89iZ0ETlVMyYfaPU94b85V"],[86,87],[2],88],[15,false,52,3,7,-104,[1,"bdoqwnOLFLI6WKxK9NF5q/"]]],[0,"5c15Oma+JJRoNn2IwjXiVi",null,null,null,1,0],[1,-3.736,1.431,9.842],[3,0,0.4383711467890774,0,0.898794046299167],[1,0.679,0.679,0.679],[1,0,52,0]],[8,"fanchuan",1,[[4,1,-105,[1,"5eXKszkI5Lkqo+c3jHsiop"],[89,90],[2],91],[15,false,300,2,6,-106,[1,"ad4W73fuNKC7vYuqau07b6"]]],[0,"06XIRQq5pNQ6HLk/lm6pPl",null,null,null,1,0],[1,6.115,2.906,6.674],[3,0,0.49999999999999994,0,-0.8660254037844387],[1,0,300,0]],[8,"shitou",1,[[4,1,-107,[1,"52gmkikCtKB5tYerrSrCs+"],[92,93,94],[2],95],[5,3.2,-108,[1,"cblLSNaV1BeYOMxe2SAYcT"]]],[0,"adEPaIic9Hl7ZSPnsiaiG1",null,null,null,1,0],[1,-20.784,1.781,22.979],[3,0,0.6888544888316053,0,0.7248996435483659],[1,0,87.079,0]],[14,"shumu",1,[[4,1,-109,[1,"27gAr0XANMcb6Cv3i1DY+U"],[96,97],[2],98],[5,0.5,-110,[1,"f5T9L8tsNHUa7SffvsEU5K"]]],[0,"68NaSAhKJAA5+qyFxDN4nN",null,null,null,1,0],[1,-6.462,1.376,11.594],[1,1.313,1.313,1.313]],[25,"eliteEnemyManager",false,1,[3],[[39,-112,[1,"betSSslihFRLTf+VIApRTZ"],-111]],[0,"4f4tAlMqhFFraMTD4Dceb+",null,null,null,1,0]],[26,"01",[-113,4],[0,"351V5nhCVL7oNGxvKrmDso",null,null,null,1,0],[1,0.00914635602384806,0.318979114294052,-0.00257610296830535]],[7,"mixamorig_Spine2 Socket",2,[-114],[0,"01q9uB3KdIta7hj2ur/BxP",null,null,null,1,0],[1,0.07407103090130246,1.1400039064140262,0.1399159475406081],[3,0.22132246255816693,-0.09658486991697413,0.05120678720297872,0.9690539692992641],[1,26.074556293151865,-12.133720811677119,3.2384473129072315]],[7,"mixamorig_HeadTop_End Socket",2,[-115],[0,"10nVwS1nFIkpu25V0YlB14",null,null,null,1,0],[1,0.022299384850452814,1.7163240849792536,0.25255119496802686],[3,-0.06288541446530177,-0.00844317461345801,0.02296019158263183,0.9977208863467094],[1,-7.194277646602985,-0.8007635274684969,2.6868750659803213]],[7,"mixamorig_RightForeArm Socket",2,[-116],[0,"0a5sqKYftFCItzrGjOANpv",null,null,null,1,0],[1,-0.42605702064739415,1.0983392349619399,0.4876276685138144],[3,0.7383432233697541,0.3923824698182267,-0.21507918011827376,0.5046050219359303],[1,101.31195421135546,49.96366003771858,21.245559560502414]],[9,"hp",3,[[20,"Plane<MeshRenderer>",-117,[1,"14RvbBAipOUJkwmeAapWi4"],[123],[2],124]],[0,"11uvHVQh9K66JmaV2iJ4vI",null,null,null,1,0],[1,0,3.975,0],[3,0.536349830825617,0,0,0.843995769523362],[1,0.162,0.09,0.038],[1,64.871,0,0]],[9,"shui",1,[[10,-118,[1,"e73qM1CZpMjqfEOmWgnkdD"],[59],[2],60]],[0,"6a+lA1uZFHt73u2l+eTzhn",null,null,null,1,0],[1,19.396,0,21.423],[3,0.5443667785693973,0.45129237794358634,0.4512923779435863,-0.5443667785693974],[1,16.868,19.26,7.341],[1,-90,-439.319,0]],[9,"shui",1,[[10,-119,[1,"c5RRdfJE9AK5jYnzGK8Mrq"],[61],[2],62]],[0,"b8piCex6hBrapz3ua2Jscj",null,null,null,1,0],[1,11.767,0,24.509],[3,0.5443667785693973,0.45129237794358634,0.4512923779435863,-0.5443667785693974],[1,5.716,5.043,7.341],[1,-90,-439.319,0]],[9,"shui",1,[[10,-120,[1,"7fPFN7tR9DHIViL1mAy2Iz"],[68],[2],69]],[0,"cemkgH7ktFlpSOHaVyxirk",null,null,null,1,0],[1,21.549,0,10.177],[3,0.5443667785693973,0.45129237794358634,0.4512923779435863,-0.5443667785693974],[1,10.925,10.552,7.341],[1,-90,-439.319,0]],[9,"shui",1,[[10,-121,[1,"c8b9Ts7rVNmrQVmKHsPOTh"],[70],[2],71]],[0,"cemkgH7ktFlpSOHaVyxirk",null,null,null,1,0],[1,13.364,-0.09,-14.031],[3,0.5443667785693973,0.45129237794358634,0.4512923779435863,-0.5443667785693974],[1,36.303,26.347,7.341],[1,-90,-439.319,0]],[9,"shui",1,[[10,-122,[1,"e9PmoBhW9OjLGpVEn46KXA"],[72],[2],73]],[0,"ffgPWr1hxC3r3NNyzJBEOm",null,null,null,1,0],[1,-14.203,0,-10.077],[3,0.5443667785693973,0.45129237794358634,0.4512923779435863,-0.5443667785693974],[1,27.6,28.857,7.341],[1,-90,-439.319,0]],[9,"shui",1,[[10,-123,[1,"3c2AvZZH9MdaZQp+c34kam"],[74],[2],75]],[0,"cdqicK8N9Mlro+GvHtXW9f",null,null,null,1,0],[1,-17.35,0,17.334],[3,0.5443667785693973,0.45129237794358634,0.4512923779435863,-0.5443667785693974],[1,29.701,28.753,7.341],[1,-90,-439.319,0]],[9,"shui",1,[[10,-124,[1,"4bQgXg0UpJ7aLts0sKm1Si"],[76],[2],77]],[0,"3bEW009DxJUYN3icJ6ZRw8",null,null,null,1,0],[1,-20.472,0,-20.019],[3,0.5443667785693973,0.45129237794358634,0.4512923779435863,-0.5443667785693974],[1,5.716,5.043,7.341],[1,-90,-439.319,0]],[9,"shui",1,[[10,-125,[1,"b3EhBkl7xIYJWvJUADpprU"],[81],[2],82]],[0,"38X1jODBpLH7R1Hxz8LMpQ",null,null,null,1,0],[1,1.78,0,6.034],[3,0.5443667785693973,0.45129237794358634,0.4512923779435863,-0.5443667785693974],[1,24.79,30.622,4.856],[1,-90,-439.319,0]],[9,"shui",1,[[10,-126,[1,"edGqJ4YEdFxYumWeXwdCQA"],[99],[2],100]],[0,"d6WRrEtOxNlITXYaMfA3Oo",null,null,null,1,0],[1,4.428,0,20.127],[3,-0.4951685716652041,0.5047851876145353,0.5047851876145352,0.4951685716652042],[1,14.702,19.303,4.856],[1,-90,91.102,0]],[27,"enemyBulletManager",false,1,[[40,-127,[1,"beL4uCUVhLpL5bkaUGJOya"],[101]]],[0,"b2frdCJXtL5Z45AmCwdED3",null,null,null,1,0]],[28,"RootNode",2,[34],[0,"92OT9VVzRHdZqS9+cPh1cD",null,null,null,1,0]],[32,"eliteEnemy1",34,[-128],[0,"66pz3htlBO+oZg4dzvAOKs",null,null,null,1,0],[1,-0.00914635602384806,-0.318979114294052,0.00257610296830535],[1,0.000007629394472149903,0,0]],[41,1,50,[1,"49Y+GDEqlPX6QsGAcj0qpM"],[102],[2],2],[7,"mixamorig_Spine",4,[-129],[0,"6eoExcUJVJn52hqnS0h4J4",null,null,null,1,0],[1,0,0.161960527300835,0.0000801625719759613],[3,0.10740425950998389,-0.0014694580724044332,0.01625742355672843,0.9940814161382268],[1,12.3389431715238,-0.3676719902311975,1.834165125442188]],[7,"mixamorig_Spine1",52,[5],[0,"6eju2remxPvbp+wfTCGp0F",null,null,null,1,0],[1,-1.77635679969558e-17,0.188953951001167,0],[3,0.033994074705082374,0.000391445353120079,0.015120734369112489,0.999307566791936],[1,3.8968436532470325,-0.0140829935755281,1.7332979541903595]],[7,"mixamorig_Neck",5,[-130],[0,"3a2psg+3NC0pG/IjHIjxbb",null,null,null,1,0],[1,7.10542719878232e-17,0.24294076859951,5.03342784119454e-11],[3,0.009671666915397465,0.0187490568802039,-0.044510917053517715,0.9987861182396537],[1,1.2074091891870917,2.2044081126271458,-5.080258578825721]],[13,"mixamorig_Head",54,[[12,"mixamorig_HeadTop_End",-131,[0,"78JaPNPkRO/YmgsSkKkQ8Q",null,null,null,1,0],[1,0,0.242325276136398,-0.0122011285275221]]],[0,"b2I1trcwFG+qgZQipsja3W",null,null,null,1,0],[1,7.10542719878232e-17,0.131204292178154,-0.00660616252571344],[3,-0.2927707480671752,0.06579973654217709,0.015449318351356166,0.9537908587890981],[1,-34.09316735998452,7.733762271936076,-0.5189715801555448]],[7,"mixamorig_LeftShoulder",5,[-132],[0,"70kmK9pgtD26Z/P5IKhW/z",null,null,null,1,0],[1,0.131901398301125,0.203424885869026,0.0000930162714212202],[3,0.718984320024521,0.2872897741177879,-0.39630217140913193,0.4934275247517455],[1,110.3694432699952,58.604360373222235,1.2618058680466073]],[7,"mixamorig_LeftArm",56,[-133],[0,"00WByeaVxLKoeQUokfafZi",null,null,null,1,0],[1,-2.84217087951293e-16,0.275324732065201,-1.42108543975646e-16],[3,-0.0633851207914087,0.05304248569667232,0.3408936222713042,0.936461616655016],[1,-11.525163628849398,10.597345943731188,39.17886313380001]],[13,"mixamorig_LeftForeArm",57,[[12,"mixamorig_LeftHand",-134,[0,"08r6FqVNpO152kcszqhnvI",null,null,null,1,0],[1,-4.97379917149652e-16,0.259129166603088,-8.52651263853879e-16]]],[0,"1ar9pdPVlEdYgoVeuJwnXw",null,null,null,1,0],[1,3.55271346704226e-16,0.289237171411514,-4.26325631926939e-16],[3,0.000038777114115361446,0.000016852713033385717,0.666671631553768,0.7453515505409235],[1,0.018222940545349037,-0.013708348505453357,83.6213929485201]],[7,"mixamorig_RightShoulder",5,[-135],[0,"e9CeNv/ORJWo+KVQ6ySd0i",null,null,null,1,0],[1,-0.131901398301125,0.203424826264381,-0.0000538993881491479],[3,0.654315184592546,-0.3654506863809985,0.3733839157219548,0.5467192026218027],[1,97.78288956938411,-62.9237404616692,-4.012123588970225]],[7,"mixamorig_RightArm",59,[-136],[0,"79mXZALAZANZ6WHs4fwanS",null,null,null,1,0],[1,7.10542719878232e-17,0.275324732065201,0],[3,-0.10823461660165341,-0.012543168204912749,-0.4570453867217388,0.8827442728088654],[1,-19.92479701023512,-11.754228300420865,-53.53240854541266]],[13,"mixamorig_RightForeArm",60,[[12,"mixamorig_RightHand",-137,[0,"a7p2AU3Z9LMLLeIEdQYg27",null,null,null,1,0],[1,2.84217087951293e-16,0.259130865335464,-7.10542693408453e-16]]],[0,"a7igzL8wxEGL9yF+tySGan",null,null,null,1,0],[1,-7.10542719878232e-17,0.289243012666702,-2.84217087951293e-16],[3,0.0006612087085185406,-0.00016370238320888343,-0.5814555346568994,0.8135778986805337],[1,0.15668160987049742,0.08892134349798124,-71.10594451493691]],[7,"mixamorig_LeftUpLeg",4,[-138],[0,"a5RxxA7wBHG4m8ew3fhCMl",null,null,null,1,0],[1,0.177201703190804,-0.089801661670208,0.00182912580203265],[3,0.1306277102082761,0.07126943216317501,0.9733961489936974,-0.17423262177078278],[1,-168.78256499260564,-162.86087504197735,-18.697714141467696]],[7,"mixamorig_LeftLeg",62,[-139],[0,"53Thb66DlBnqSkpnLiCw/c",null,null,null,1,0],[1,-2.84217087951293e-16,0.319864004850388,0],[3,-0.3173483080435909,-0.06309662146124614,0.021999674377706103,0.9459518391912567],[1,-36.842631059327054,-6.0711226650868735,4.684476299556633]],[7,"mixamorig_LeftFoot",63,[-140],[0,"acCjplp2lGZKtj9wHXsAmn",null,null,null,1,0],[1,-2.84217087951293e-16,0.209166884422302,6.21724896437066e-17],[3,0.6075522441270772,-0.20691363982397967,-0.0013634760707422209,0.7668540651544785],[1,74.30022465448044,-19.047357009921836,-14.685483380268487]],[13,"mixamorig_LeftToeBase",64,[[12,"mixamorig_LeftToe_End",-141,[0,"58T2IfwwhKJZRkESy8wehi",null,null,null,1,0],[1,-7.10542719878232e-17,0.024717690423131,-1.77635679969558e-17]]],[0,"ee3TA/AbtPn5mGOtaz/r3L",null,null,null,1,0],[1,-7.10542719878232e-17,0.0203245468437672,-3.55271359939116e-17],[3,-0.029102539086591106,-0.0006978064641899187,-0.10480664469856105,0.9940664577943877],[1,-3.4000506749018053,-0.4386369070598208,-12.024440889525064]],[7,"mixamorig_RightUpLeg",4,[-142],[0,"51+r7uBT1MA7wOvAY9hOL3",null,null,null,1,0],[1,-0.177201703190804,-0.089801661670208,0.00555124972015619],[3,-0.15534660498143174,0.5061405391669286,0.7969745540188515,0.2907245211175114],[1,-109.55255519966089,145.30262595628238,17.827102971760105]],[7,"mixamorig_RightLeg",66,[-143],[0,"05aa2L3QtLPr3HnwNmcDYJ",null,null,null,1,0],[1,3.55271359939116e-17,0.319866925477982,7.10542719878232e-17],[3,0.9027227185724022,0.03610388943574704,-0.059522863625228135,-0.42455297813902493],[1,-129.88215395202008,4.435041628992784,6.645433338660948]],[7,"mixamorig_RightFoot",67,[-144],[0,"c984HJS0lMCKCN5OB62l2+",null,null,null,1,0],[1,1.42108543975646e-16,0.209166795015335,-7.10542719878232e-17],[3,-0.5109738698641555,-0.5324659338258935,0.5549793233740785,-0.3839058273303735],[1,97.99956013352327,100.6222228508251,6.7785814203668675]],[13,"mixamorig_RightToeBase",68,[[12,"mixamorig_RightToe_End",-145,[0,"02LsTqtPxNIZwWTe+qT5pP",null,null,null,1,0],[1,3.55271359939116e-17,0.00353419291786849,-3.55271359939116e-17]]],[0,"57xbQw4+BFMJYOHpiEw5CS",null,null,null,1,0],[1,-5.32907039908674e-17,0.00724953692406416,0],[3,-0.18419709520085908,-0.016529259950554213,-0.0532083652230018,0.9813088624665266],[1,-21.409847143550177,-2.9976930170913727,-5.643496028583852]],[8,"Purse",35,[[4,1,-146,[1,"71wPvuZKBGOJXc4VMdShxx"],[103,104],[2],105]],[0,"fcdlvin+FDPaE3IVWqF6L+",null,null,null,1,0],[1,0.368922770023346,0.329400897026062,0.0983936190605164],[3,0.7588003305374295,0.0013893047631021028,-0.03558041540807024,0.6503492617416831],[1,98.87262596472448,3.2021199423434727,-2.5316346485453107]],[33,"head_pirate_1",36,[-147],[0,"5eiRT84ZBM7aLFzzTZ8zAG",null,null,null,1,0],[1,0.0106150731444359,-0.0719429552555084,0.193809747695923],[3,0.0011282690389452148,0.0178491682632674,-0.024329933025899295,0.9995439903077005],[1,0.1792067540979627,2.0504367500654377,-2.7855230444811316]],[36,1,71,[1,"91OOQvislKK5hHOQkSUdCP"],[106,107,108,109,110,111,112,113,114,115],[2]],[8,"IronHook",37,[[10,-148,[1,"3eChop1QtCL4u6O0UYuNYK"],[116,117],[2],118]],[0,"86HeGVHX9J16aU0+XEKy9Z",null,null,null,1,0],[1,-0.0141886966302991,0.128266975283623,-0.00208832789212465],[3,0.35288859135321693,0.01936533341669073,0.9352170420201594,-0.02153393297718994],[1,-177.0515211919889,-138.61442561622528,-1.524831671160542]],[42,10,12,800,2,0,0,0,0,0,0,0,3,[1,"c6a35509hLbbEz3lc5wjke"],2,38,72,51,[43,40,10,0,2]]],0,[0,4,1,0,0,1,0,-1,6,0,-2,7,0,-3,8,0,-4,9,0,-5,10,0,-6,11,0,-7,12,0,-8,13,0,-9,14,0,-10,15,0,-11,16,0,-12,17,0,-13,18,0,-14,19,0,-15,20,0,-16,21,0,-17,22,0,-18,23,0,-19,24,0,-20,39,0,-21,40,0,-22,25,0,-23,26,0,-24,41,0,-25,42,0,-26,43,0,-27,44,0,-28,45,0,-29,27,0,-30,46,0,-31,28,0,-32,29,0,-33,30,0,-34,31,0,-35,32,0,-36,47,0,-37,48,0,-38,33,0,5,35,0,5,36,0,5,37,0,0,2,0,-1,49,0,-2,35,0,-3,36,0,-4,37,0,-1,74,0,-2,38,0,-1,52,0,-2,62,0,-3,66,0,-1,54,0,-2,56,0,-3,59,0,0,6,0,0,6,0,0,7,0,0,7,0,0,8,0,0,8,0,0,9,0,0,9,0,0,10,0,0,10,0,0,11,0,0,11,0,0,12,0,0,12,0,0,13,0,0,13,0,0,14,0,0,14,0,0,15,0,0,15,0,0,16,0,0,16,0,0,17,0,0,17,0,0,18,0,0,18,0,0,19,0,0,19,0,0,20,0,0,20,0,0,21,0,0,21,0,0,22,0,0,22,0,0,23,0,0,23,0,0,24,0,0,24,0,0,25,0,0,25,0,0,26,0,0,26,0,0,27,0,0,27,0,0,28,0,0,28,0,0,29,0,0,29,0,0,30,0,0,30,0,0,31,0,0,31,0,0,32,0,0,32,0,9,74,0,0,33,0,-1,50,0,-1,70,0,-1,71,0,-1,73,0,0,38,0,0,39,0,0,40,0,0,41,0,0,42,0,0,43,0,0,44,0,0,45,0,0,46,0,0,47,0,0,48,0,-1,51,0,-1,53,0,-1,55,0,3,55,0,-1,57,0,-1,58,0,3,58,0,-1,60,0,-1,61,0,3,61,0,-1,63,0,-1,64,0,-1,65,0,3,65,0,-1,67,0,-1,68,0,-1,69,0,3,69,0,0,70,0,-1,72,0,0,73,0,6,1,2,3,3,3,3,33,4,3,34,5,3,53,34,3,49,148],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,72,74],[-1,1,-1,1,-1,-2,-3,1,-1,-2,1,-1,-2,1,-1,-2,1,-1,-2,-3,-4,1,-1,-2,-3,1,-1,-2,1,-1,-2,1,-1,-2,1,-1,-2,1,-1,-2,1,-1,-2,1,-1,-2,1,-1,1,-1,1,-1,-2,1,-1,-2,-3,-4,1,-1,1,-1,1,-1,-2,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,-2,1,-1,1,-1,-2,1,-1,-2,1,-1,-2,1,-1,-2,-3,1,-1,-2,1,-1,1,-1,-1,-1,-2,1,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-2,1,-1,-2,-3,-4,-1,1,1,10,1,7],[7,8,7,8,23,24,25,26,2,3,4,9,10,11,2,3,4,2,27,28,29,30,12,13,14,15,2,3,4,2,3,4,2,3,4,9,10,11,2,3,4,2,3,4,2,3,4,31,32,7,8,2,3,4,33,34,35,36,37,6,5,6,5,2,3,4,7,8,6,5,6,5,6,5,6,5,6,5,2,38,39,6,5,16,40,41,2,42,43,44,16,45,12,13,14,15,2,3,4,46,5,47,48,17,49,50,17,51,52,53,54,55,56,57,58,59,18,19,20,60,61,62,63,64,21,65,66,67,22]],[[[3,"DefaultMaterial",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.200000002980232,"roughness":0.800000011920929,"alphaThreshold":0},"albedoScale",8,[1,0.5,0.5,0.5]]],11]]],0,0,[0],[2],[1]],[[[3,"eliteEnemy1_4",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{"HAS_SECOND_UV":true}],[[[{"alphaThreshold":0,"roughness":0.800000011920929,"metallic":0.200000002980232},"mainColor",8,[4,4287876863],"albedoScale",8,[1,0.889999985694885,0.724460005760193,0.338200002908707]]],11]]],0,0,[0],[2],[1]],[[[45,"../resources/mat/hp",[{"hash":1714234754,"name":"../resources/mat/hp|hp-vs:vert|hp-fs:frag","blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"hpColor","type":16,"count":1},{"name":"backColor","type":16,"count":1},{"name":"hpProgress","type":16,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBiasAndProbeId","format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING"]},{"name":"a_reflectionProbeData","format":44,"isInstanced":true,"location":12,"defines":["USE_INSTANCING","CC_USE_REFLECTION_PROBE"]},{"name":"a_sh_linear_const_r","format":44,"isInstanced":true,"location":13,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_g","format":44,"isInstanced":true,"location":14,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_b","format":44,"isInstanced":true,"location":15,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_vertexId","format":11,"location":16,"defines":["CC_USE_MORPH"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["!USE_INSTANCING"]},{"name":"CCMorph","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_displacementWeights","typename":"vec4","type":16,"count":15,"isArray":true},{"name":"cc_displacementTextureInfo","typename":"vec4","type":16,"count":1}],"defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_jointTextureInfo","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_jointAnimInfo","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_joints","typename":"vec4","type":16,"count":0,"precision":"highp ","isArray":true}],"defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","typename":"sampler2D","type":28,"count":1,"precision":"highp ","stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","typename":"sampler2D","type":28,"count":1,"precision":"highp ","stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"hpColor","type":16,"count":1},{"name":"backColor","type":16,"count":1},{"name":"hpProgress","type":16,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    in vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    in vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    in vec4 a_sh_linear_const_r;\n    in vec4 a_sh_linear_const_g;\n    in vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\n#if !USE_INSTANCING\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n    highp vec4 cc_reflectionProbeBlendData1;\n    highp vec4 cc_reflectionProbeBlendData2;\n  };\n#endif\nvoid CCGetWorldMatrix(out mat4 matWorld)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n  #else\n    matWorld = cc_matWorld;\n  #endif\n}\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\n#if CC_USE_MORPH\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      layout(std140) uniform CCSkinning {\n        highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n      };\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout vec4 In)\n{\n    In = vec4(a_position, 1.0);\n  #if CC_USE_MORPH\n    applyMorph(In);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In);\n  #endif\n}\nout vec3 v_position;\nvec4 vert () {\n  vec4 position;\n  CCVertInput(position);\n  v_position = position.xyz;\n  mat4 matWorld;\n  CCGetWorldMatrix(matWorld);\n  return cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\n#if USE_ALPHA_TEST\n#endif\nlayout(std140) uniform Constant {\n  vec4 hpColor;\n  vec4 backColor;\n  vec4 hpProgress;\n};\nin vec3 v_position;\nvec4 frag () {\n  vec4 o = backColor;\n  if(v_position.x < 10.0 * hpProgress.x - 5.0){\n    o = hpColor;\n  }\n  return CCFragOutput(o);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    attribute vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    attribute vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    attribute vec4 a_sh_linear_const_r;\n    attribute vec4 a_sh_linear_const_g;\n    attribute vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\n#if !USE_INSTANCING\n  uniform highp mat4 cc_matWorld;\n#endif\nvoid CCGetWorldMatrix(out mat4 matWorld)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n  #else\n    matWorld = cc_matWorld;\n  #endif\n}\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\n#if CC_USE_MORPH\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout vec4 In)\n{\n    In = vec4(a_position, 1.0);\n  #if CC_USE_MORPH\n    applyMorph(In);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In);\n  #endif\n}\nvarying vec3 v_position;\nvec4 vert () {\n  vec4 position;\n  CCVertInput(position);\n  v_position = position.xyz;\n  mat4 matWorld;\n  CCGetWorldMatrix(matWorld);\n  return cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\n#if USE_ALPHA_TEST\n#endif\n   uniform vec4 hpColor;\n   uniform vec4 backColor;\n   uniform vec4 hpProgress;\nvarying vec3 v_position;\nvec4 frag () {\n  vec4 o = backColor;\n  if(v_position.x < 10.0 * hpProgress.x - 5.0){\n    o = hpColor;\n  }\n  return CCFragOutput(o);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["!USE_INSTANCING"]},{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":74,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":45}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_USE_REFLECTION_PROBE","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_LIGHT_PROBE","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"},{"name":"CC_MORPH_TARGET_COUNT","type":"number","range":[2,8]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean"},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean"},{"name":"CC_USE_REAL_TIME_JOINT_TEXTURE","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"ALPHA_TEST_CHANNEL","type":"string","options":["a","r","g","b"]}]}],[{"name":"opaque","passes":[{"program":"../resources/mat/hp|hp-vs:vert|hp-fs:frag","properties":{"hpColor":{"type":16,"value":[1,1,1,1]},"backColor":{"type":16,"value":[1,1,1,1]},"hpProgress":{"type":16,"value":[1,1,1,1]}}}]}]]],0,0,[],[],[]],[[[6,".bin",2027439477,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":5152,"length":420,"count":210,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":40012,"length":2244,"count":1122,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":5152,"count":92,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":5572,"length":34440,"count":615,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.8813905119895935,-2.9902966022491455,-2.946552276611328],"maxPosition",8,[1,0.8813905119895935,2.9902966022491455,2.946552276611328]]],-1],0,0,[],[],[]],[[[3,"dao2-5",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.533333361148834,0.756862759590149,0.250980406999588]]],11]]],0,0,[0],[2],[0]],[[[6,".bin",2978139455,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":9520,"length":516,"count":258,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":9520,"count":170,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-1.295166254043579,-0.7489845156669617,-1.3572721481323242],"maxPosition",8,[1,1.295166254043579,0.7489845156669617,1.3572721481323242]]],-1],0,0,[],[],[]],[[[3,"2",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.200000002980232,"roughness":0.800000011920929,"occlusion":0},"albedoScale",8,[1,0.649999976158142,0.618799984455109,0.493999987840652]]],11]]],0,0,[0],[2],[0]],[[[6,".bin",1852622382,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":12880,"length":852,"count":426,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":19108,"length":288,"count":144,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[2],"indexView":{"offset":20740,"length":72,"count":36,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":12880,"count":230,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":13732,"length":5376,"count":96,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":19396,"length":1344,"count":24,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-1.5432543754577637,-3.457523822784424,-1.33649742603302],"maxPosition",8,[1,1.5432543754577637,3.457523822784424,1.33649742603302]]],-1],0,0,[],[],[]],[[[3,"chuan2-4",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.992156863212585,0.0784313753247261,0.329411774873734]]],11]]],0,0,[0],[2],[0]],[[[3,"shan2",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.454901963472366,0.760784327983856,0.180392161011696]]],11]]],0,0,[0],[2],[0]],[[[3,"dengta1",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.239215686917305,0.34901961684227,0.372549027204514]]],11]]],0,0,[0],[2],[0]],[[[6,".bin",2503601436,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":3024,"length":168,"count":84,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":13608,"length":540,"count":270,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":3024,"count":54,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":3192,"length":10416,"count":186,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5099501013755798,-1.1374186277389526,-0.5362411141395569],"maxPosition",8,[1,0.5099501013755798,1.1374186277389526,0.5362411141395569]]],-1],0,0,[],[],[]],[[[6,".bin",1678561827,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1344,"length":72,"count":36,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":7744,"length":336,"count":168,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[2],"indexView":{"offset":15920,"length":420,"count":210,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[3],"indexView":{"offset":37564,"length":1488,"count":744,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":1344,"count":24,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":1416,"length":6328,"count":113,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":8080,"length":7840,"count":140,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":16340,"length":21224,"count":379,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-1.9525405168533325,-3.1344761848449707,-0.7500317692756653],"maxPosition",8,[1,1.9525405168533325,3.1344761848449707,0.7500317692756653]]],-1],0,0,[],[],[]],[[[3,"shan3",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,1,1,1]]],11]]],0,0,[0],[2],[0]],[[[6,".bin",2066806884,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":34440,"length":2244,"count":1122,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":41836,"length":420,"count":210,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":34440,"count":615,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":36684,"length":5152,"count":92,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.8813905119895935,-2.9902966022491455,-2.946552276611328],"maxPosition",8,[1,0.8813905119895935,2.9902966022491455,2.946552276611328]]],-1],0,0,[],[],[]],[[[3,"fangzi4",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.470588237047195,0.290196090936661,0.137254908680916]]],11]]],0,0,[0],[2],[0]],[[[3,"fanchaun1",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.620000004768372,0,0.289333343505859]]],11]]],0,0,[0],[2],[0]],[[[6,".bin",1213652173,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":28560,"length":1704,"count":852,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":28560,"count":510,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-3.3548529148101807,-0.48818978667259216,-0.9690660834312439],"maxPosition",8,[1,3.3548529148101807,0.48818978667259216,0.9690660834312439]]],-1],0,0,[],[],[]],[[[6,".bin",2985867184,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":10752,"length":576,"count":288,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":14912,"length":192,"count":96,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[2],"indexView":{"offset":19192,"length":288,"count":144,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[3],"indexView":{"offset":84216,"length":3456,"count":1728,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":10752,"count":192,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":11328,"length":3584,"count":64,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":15104,"length":4088,"count":73,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":19480,"length":64736,"count":1156,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-3.907282590866089,-3.2956135272979736,-1.8873839378356934],"maxPosition",8,[1,3.907282590866089,3.2956135272979736,1.8873839378356934]]],-1],0,0,[],[],[]],[[[3,"dao2-1",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.22783587872982,0.584070801734924,0.062751404941082]]],11]]],0,0,[0],[2],[0]],[[[3,"xiaocaowu3",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.470588237047195,0.290196090936661,0.137254908680916]]],11]]],0,0,[0],[2],[0]],[[[6,".bin",904271508,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":46704,"length":3456,"count":1728,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":75304,"length":2016,"count":1008,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":46704,"count":834,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":50160,"length":25144,"count":449,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-1.960546851158142,-4.745015621185303,-4.953537940979004],"maxPosition",8,[1,1.960546851158142,4.745015621185303,4.953537940979004]]],-1],0,0,[],[],[]],[[[3,"fanchaun2",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.0274509806185961,0.227448895573616,0.529411792755127]]],11]]],0,0,[0],[2],[0]],[[[6,".bin",3319534320,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":9016,"length":558,"count":279,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":16462,"length":390,"count":195,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":9016,"count":161,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":9574,"length":6888,"count":123,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-1.3915456533432007,-1.4312968254089355,-3.342531442642212],"maxPosition",8,[1,1.3915456533432007,1.4312968254089355,3.342531442642212]]],-1],0,0,[],[],[]],[[[3,"shui",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,1,1,1]]],11]]],0,0,[0],[2],[0]],[[[3,"fanchaunbai",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.200000002980232,"roughness":0.800000011920929,"occlusion":0},"albedoScale",8,[1,0.800000011920929,0.800000011920929,0.800000011920929]]],11]]],0,0,[0],[2],[0]],[[[6,".bin",2520827405,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":9128,"length":570,"count":285,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":12666,"length":210,"count":105,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[2],"indexView":{"offset":19596,"length":360,"count":180,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":9128,"count":163,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":9698,"length":2968,"count":53,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":12876,"length":6720,"count":120,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-3.221856117248535,-1.849705457687378,-4.166584491729736],"maxPosition",8,[1,3.221856117248535,1.849705457687378,4.166584491729736]]],-1],0,0,[],[],[]],[[[3,"Mat.2",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.976470589637756,0.984313726425171,0.980392158031464]]],11]]],0,0,[0],[2],[0]],[[[3,"dengta2",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.800000011920929,0.800000011920929,0.800000011920929]]],11]]],0,0,[0],[2],[0]],[[[3,"haidaochuan",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.470588237047195,0.290196090936661,0.137254908680916]]],11]]],0,0,[0],[2],[0]],[[[3,"piaofuwu",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.384313732385635,0.286274522542953,0.18823529779911]]],11]]],0,0,[0],[2],[0]],[[[3,"Mat.1",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.897725462913513,0.918549001216888,0.925490200519562]]],11]]],0,0,[0],[2],[0]],[[[3,"DefaultMaterial",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.200000002980232,"roughness":0.800000011920929,"occlusion":0},"albedoScale",8,[1,0.5,0.5,0.5]]],11]]],0,0,[0],[2],[0]],[[[6,".bin",34052523,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":5376,"length":288,"count":144,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":36072,"length":2100,"count":1050,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":5376,"count":96,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":5664,"length":30408,"count":543,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-2.3580727577209473,-1.082979679107666,-1.5964083671569824],"maxPosition",8,[1,2.3580727577209473,1.082979679107666,1.5964083671569824]]],-1],0,0,[],[],[]],[[[3,"dengta3",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.839999973773956,0.157360002398491,0.0671999976038933]]],11]]],0,0,[0],[2],[0]],[[[3,"fangzi1",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.649999976158142,0.045499999076128,0.317524999380112]]],11]]],0,0,[0],[2],[0]],[[[3,"Mat.3",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.0602613054215908,"occlusion":0},"albedoScale",8,[1,0.988235294818878,0.0784313753247261,0]]],11]]],0,0,[0],[2],[0]],[[[3,"fangzi2",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.800000011920929,0.800000011920929,0.800000011920929]]],11]]],0,0,[0],[2],[0]],[[[3,"shan",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.674509823322296,0.619607865810394,0.592156887054443]]],11]]],0,0,[0],[2],[0]],[[[3,"fangzi3",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"HAS_SECOND_UV":true}],[[[{"metallic":0.400000005960464,"roughness":0.242535620927811,"occlusion":0},"albedoScale",8,[1,0.952941179275513,0.694117665290833,0.24705882370472]]],11]]],0,0,[0],[2],[0]],[[[16,"redCirce"],[29,"redCirce",[[20,"Plane<MeshRenderer>",-2,[1,"d18hSVLiNLaKy2V4UD7FQy"],[0],[2],1]],[0,"3aYERleApMkJcAzseDqfZX",null,null,null,-1,0]]],0,[0,4,1,0,0,1,0,6,1,2],[0,0],[-1,1],[68,21]],[[[22,"redCircle","1",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"roughness":0.8,"metallic":0.6},"mainTexture",6,0]],11]]],0,0,[0,0],[8,2],[69,1]],[[[3,"eliteEnemy1_0",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{"HAS_SECOND_UV":true}],[[[{"alphaThreshold":0,"roughness":0.104536153376102,"metallic":0.400000005960464},"albedoScale",8,[1,0,0,0],"emissive",8,[4,4283781458]]],11]]],0,0,[0],[2],[1]],[[[3,"eliteEnemy1_7",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{"HAS_SECOND_UV":true}],[[[{"alphaThreshold":0,"roughness":0.800000011920929,"metallic":0.200000002980232},"mainColor",8,[4,4289444590],"albedoScale",8,[1,0.879999995231628,0.664106667041779,0.475199997425079]]],11]]],0,0,[0],[2],[1]],[[[6,".bin",917032931,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":5656,"length":408,"count":204,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":11496,"length":594,"count":297,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":5656,"count":101,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":6064,"length":5432,"count":97,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.17673398554325104,-0.7449167966842651,-0.17559491097927094],"maxPosition",8,[1,0.20489946007728577,0.07594867050647736,0.17559491097927094]]],-1],0,0,[],[],[]],[[[6,".bin",2905787208,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1792,"length":96,"count":48,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":6480,"length":288,"count":144,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[2],"indexView":{"offset":24128,"length":1440,"count":720,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[3],"indexView":{"offset":47464,"length":1872,"count":936,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[4],"indexView":{"offset":50344,"length":96,"count":48,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[5],"indexView":{"offset":53184,"length":420,"count":210,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[6],"indexView":{"offset":55172,"length":168,"count":84,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[7],"indexView":{"offset":56012,"length":36,"count":18,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[8],"indexView":{"offset":64448,"length":840,"count":420,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[9],"indexView":{"offset":70944,"length":432,"count":216,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":1792,"count":32,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":1888,"length":4592,"count":82,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":6768,"length":17360,"count":310,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":25568,"length":21896,"count":391,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":49336,"length":1008,"count":18,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":50440,"length":2744,"count":49,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":53604,"length":1568,"count":28,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":55340,"length":672,"count":12,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":56048,"length":8400,"count":150,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":65288,"length":5656,"count":101,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.6514498591423035,-0.6453572511672974,-0.6414517164230347],"maxPosition",8,[1,0.6514498591423035,0.6453572511672974,0.6414517164230347]]],-1],0,0,[],[],[]],[[[46,"Skin-0",1693952466,["RootNode/01/mixamorig_Hips/mixamorig_LeftUpLeg/mixamorig_LeftLeg/mixamorig_LeftFoot/mixamorig_LeftToeBase","RootNode/01/mixamorig_Hips/mixamorig_LeftUpLeg/mixamorig_LeftLeg","RootNode/01/mixamorig_Hips/mixamorig_LeftUpLeg/mixamorig_LeftLeg/mixamorig_LeftFoot","RootNode/01/mixamorig_Hips/mixamorig_LeftUpLeg","RootNode/01/mixamorig_Hips","RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1/mixamorig_Spine2/mixamorig_LeftShoulder","RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1/mixamorig_Spine2/mixamorig_LeftShoulder/mixamorig_LeftArm","RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1/mixamorig_Spine2","RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1/mixamorig_Spine2/mixamorig_LeftShoulder/mixamorig_LeftArm/mixamorig_LeftForeArm","RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1/mixamorig_Spine2/mixamorig_LeftShoulder/mixamorig_LeftArm/mixamorig_LeftForeArm/mixamorig_LeftHand","RootNode/01/mixamorig_Hips/mixamorig_RightUpLeg","RootNode/01/mixamorig_Hips/mixamorig_Spine","RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1/mixamorig_Spine2/mixamorig_Neck","RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1","RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1/mixamorig_Spine2/mixamorig_Neck/mixamorig_Head","RootNode/01/mixamorig_Hips/mixamorig_RightUpLeg/mixamorig_RightLeg","RootNode/01/mixamorig_Hips/mixamorig_RightUpLeg/mixamorig_RightLeg/mixamorig_RightFoot","RootNode/01/mixamorig_Hips/mixamorig_RightUpLeg/mixamorig_RightLeg/mixamorig_RightFoot/mixamorig_RightToeBase","RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1/mixamorig_Spine2/mixamorig_RightShoulder","RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1/mixamorig_Spine2/mixamorig_RightShoulder/mixamorig_RightArm","RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1/mixamorig_Spine2/mixamorig_RightShoulder/mixamorig_RightArm/mixamorig_RightForeArm","RootNode/01/mixamorig_Hips/mixamorig_Spine/mixamorig_Spine1/mixamorig_Spine2/mixamorig_RightShoulder/mixamorig_RightArm/mixamorig_RightForeArm/mixamorig_RightHand"],[[[7,-0.9905325174331665,0.13727445900440216,-0.0010019572218880057,0,-0.003316942136734724,-0.016636205837130547,0.9998561143875122,0,0.1372380405664444,0.990393340587616,0.01693403348326683,0,0.1694079488515854,-0.041814517229795456,-0.034475646913051605,1],[7,-0.9997752904891968,-0.02119360864162445,-0.00031642901012673974,0,0.02119567058980465,-0.9997292160987854,-0.009604910388588905,0,-0.00011278058809693903,-0.009609458968043327,0.9999538064002991,0,0.16586783528327942,0.24511639773845673,0.0006327522569335997,1],[7,-0.940166175365448,0.34032419323921204,-0.01633954420685768,0,0.016659842804074287,0.09381707012653351,0.9954500198364258,0,0.34030866622924805,0.9356161952018738,-0.09387338161468506,0,0.15617592632770538,-0.0594867579638958,-0.029585784301161766,1],[7,-0.9998134970664978,-0.019308265298604965,1.5631562907659585e-17,0,0.019307991489768028,-0.9997994303703308,0.005320850294083357,0,-0.00010273639782099053,0.005319858901202679,0.9999858736991882,0,0.16633030772209167,0.5646489262580872,-0.0030265955720096827,1],[7,1,-9.806608650131388e-17,-2.7993962450721796e-17,0,9.806609311875878e-17,1,1.3315805347247078e-7,0,2.7993949215831995e-17,-1.3315805347247078e-7,1,0,-2.0425760124696065e-16,-0.6511419415473938,0.0017892627511173487,1],[7,0.0007048441912047565,0.958156406879425,-0.28624415397644043,0,0.0004950457951053977,-0.28624454140663147,-0.958156406879425,0,-0.9999995827674866,0.0005336470203474164,-0.0006760891410522163,0,-0.002111822832375765,0.28049471974372864,1.399706244468689,1],[7,0.0032285614870488644,0.9974358677864075,-0.07149254530668259,0,-0.00025890491087920964,-0.07149208337068558,-0.9974410533905029,0,-0.999994695186615,0.0032388099934905767,0.000027424444851931185,0,-0.0020981982816010714,-0.2987005412578583,1.3674730062484741,1],[7,1,-1.4447003212792207e-16,-1.6688120704073567e-19,0,1.4446993948369347e-16,0.9999998211860657,-0.000494818261358887,0,2.383676031436403e-19,0.000494818261358887,0.9999998211860657,0,-3.1298923545252505e-16,-1.2180030345916748,0.002111546229571104,1],[7,0.0019745039753615856,0.9999979734420776,0.00028346528415568173,0,-0.0001690192148089409,0.00028379957075230777,-0.9999998807907104,0,-0.9999979734420776,0.001974456012248993,0.00016957923071458936,0,-0.001358994864858687,-0.6845744252204895,1.3217463493347168,1],[7,0.0019745039753615856,0.9999979734420776,0.00028346528415568173,0,-0.0001690192148089409,0.00028379957075230777,-0.9999998807907104,0,-0.9999979734420776,0.001974456012248993,0.00016957923071458936,0,-0.001358994864858687,-0.9437035918235779,1.3217463493347168,1],[7,-0.9998134970664978,0.019308090209960938,2.402157645144614e-17,0,-0.019307639449834824,-0.9997903108596802,-0.006819110829383135,0,-0.00013166401186026633,-0.006817839574068785,0.9999766945838928,0,-0.166330024600029,0.5646696090698242,0.00006601668428629637,1],[7,1,8.192476196063991e-18,1.3635347787720065e-17,0,-8.185728056626784e-18,0.9999998211860657,-0.0004948179703205824,0,-1.363939931836035e-17,0.0004948179703205824,0.9999998211860657,0,-1.3001446197096178e-16,-0.8131014704704285,0.0021115459967404604,1],[7,1,3.4640259410911867e-17,7.153761598670174e-15,0,-3.464121232297753e-17,1,1.3315805347247078e-7,0,-7.153761598670174e-15,-1.3315805347247078e-7,1,0,-1.239811521667878e-16,-1.460944652557373,0.0013884496875107288,1],[7,1,8.820658990804932e-17,1.3595744861532863e-17,0,-8.819984673169579e-17,0.9999998211860657,-0.000494818261358887,0,-1.3639389392192999e-17,0.000494818261358887,0.9999998211860657,0,-3.04251488414111e-17,-1.0020555257797241,0.002111546229571104,1],[7,1,-4.411347589300396e-17,4.183914584281407e-15,0,4.4112920027632326e-17,1,1.3315805347247078e-7,0,-4.183914584281407e-15,-1.3315805347247078e-7,1,0,-2.5644398934156773e-16,-1.5921489000320435,0.00799461267888546,1],[7,-0.9997753500938416,0.021193617954850197,0.000058126919611822814,0,-0.02119320258498192,-0.9997296929359436,-0.009561056271195412,0,-0.00014452217146754265,-0.009560140781104565,0.9999542832374573,0,-0.16586802899837494,0.24511487782001495,0.0007382840267382562,1],[7,0.15169158577919006,-0.9541212320327759,0.2581518590450287,0,0.012667051516473293,0.2630292773246765,0.9647046327590942,0,-0.9883466958999634,-0.14306756854057312,0.051985230296850204,0,0.024446239694952965,-0.1675395667552948,0.01174245122820139,1],[7,0.25801146030426025,-0.9600802659988403,-0.1080552190542221,0,-0.01698840595781803,-0.11633303016424179,0.9930649399757385,0,-0.9659925103187561,-0.25438645482063293,-0.04632548615336418,0,0.0439445786178112,-0.16295896470546722,-0.05291491746902466,1],[7,-0.0004089803551323712,-0.958156406879425,0.28624477982521057,0,-0.0004950428265146911,-0.28624460101127625,-0.958156406879425,0,0.9999998211860657,-0.000533570593688637,-0.00035726005444303155,0,0.0021118195727467537,0.2804933190345764,1.3997067213058472,1],[7,0.007021648809313774,-0.9974157214164734,0.07150112837553024,0,0.0017248328076675534,-0.07149070501327515,-0.9974398016929626,0,0.9999738335609436,0.00712699955329299,0.0012183928629383445,0,0.0020716728176921606,-0.29868677258491516,1.367476463317871,1],[7,-0.004135534167289734,-0.9999914169311523,-0.000287550879875198,0,0.0009250549483112991,0.0002837275678757578,-0.9999995231628418,0,0.9999909996986389,-0.004135798197239637,0.0009238736820407212,0,-0.0045048329047858715,-0.6845684051513672,1.3217425346374512,1],[7,-0.004135534167289734,-0.9999914169311523,-0.000287550879875198,0,0.0009250549483112991,0.0002837275678757578,-0.9999995231628418,0,0.9999909996986389,-0.004135798197239637,0.0009238736820407212,0,-0.0045048329047858715,-0.9436992406845093,1.3217425346374512,1]],8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[6,".bin",2499638868,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":43360,"length":4788,"count":2394,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":43360,"count":542,"stride":80},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}],"jointMaps":[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]]},"minPosition",8,[1,-1.0556132793426514,-0.0005452133482322097,-0.47763296961784363],"maxPosition",8,[1,1.0556132793426514,1.8345025777816772,0.5368713140487671]]],-1],0,0,[],[],[]],[[[6,".bin",1967501600,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":14056,"length":1512,"count":756,"stride":2}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":20944,"length":288,"count":144,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":14056,"count":251,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]},{"view":{"offset":15568,"length":5376,"count":96,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.6227072477340698,-1.2668883800506592,-0.215622216463089],"maxPosition",8,[1,0.5934140086174011,0.20545366406440735,1.0033177137374878]]],-1],0,0,[],[],[]],[[[3,"eliteEnemy1_16",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{"USE_SKINNING":2,"HAS_SECOND_UV":true,"USE_ALBEDO_MAP":true}],[[[{"alphaThreshold":0,"roughness":1,"metallic":0},"mainTexture",6,0]],11]]],0,0,[0,0],[8,2],[70,1]],[[[3,"eliteEnemy1_3",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{"HAS_SECOND_UV":true}],[[[{"alphaThreshold":0,"roughness":0.800000011920929,"metallic":0.200000002980232},"mainColor",8,[4,4290690797],"albedoScale",8,[1,0.829999983310699,0.58432000875473,0.522899985313416]]],11]]],0,0,[0],[2],[1]],[[[3,"eliteEnemy1_5",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{"HAS_SECOND_UV":true}],[[[{"alphaThreshold":0,"roughness":0.800000011920929,"metallic":0.200000002980232},"mainColor",8,[4,4288066544],"albedoScale",8,[1,0.137500002980232,0.199375003576279,0.25]]],11]]],0,0,[0],[2],[1]],[[[3,"eliteEnemy1_14",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{"HAS_SECOND_UV":true}],[[[{"alphaThreshold":0,"roughness":0.800000011920929,"metallic":0.200000002980232},"mainColor",8,[4,4289111807],"albedoScale",8,[1,0.800000011920929,0.472000002861023,0.472000002861023]]],11]]],0,0,[0],[2],[1]],[[[22,"shui","1",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{}],[[[{"roughness":0.8,"metallic":0.6},"mainColor",8,[4,3186942593]]],11]]],0,0,[0],[2],[1]],[[[44,"eliteEnemy1_10",[{"alphaThreshold":0,"metallic":0.200000002980232,"roughness":0.8}],[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{"HAS_SECOND_UV":true}]]],0,0,[0],[2],[1]],[[[6,".bin",2340699283,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1440,"length":240,"count":120,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":1440,"count":30,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.24781081080436707,-0.31538695096969604,0.0055152797140181065],"maxPosition",8,[1,0.3131820559501648,0.3587551414966583,0.058411166071891785]]],-1],0,0,[],[],[]],[[[3,"eliteEnemy1_8",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{"HAS_SECOND_UV":true}],[[[{"alphaThreshold":0,"roughness":0.800000011920929,"metallic":0.200000002980232},"mainColor",8,[4,4289243334],"albedoScale",8,[1,0.490000009536743,0.490000009536743,0.490000009536743]]],11]]],0,0,[0],[2],[1]],[[[3,"eliteEnemy1_15",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{"HAS_SECOND_UV":true}],[[[{"alphaThreshold":0,"roughness":0.800000011920929,"metallic":0.200000002980232},"mainColor",8,[4,4287335339],"albedoScale",8,[1,0.139200001955032,0.139200001955032,0.159999996423721]]],11]]],0,0,[0],[2],[1]],[[[3,"hp",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{}],[[[{},"hpColor",8,[4,4278255360],"backColor",8,[4,4292267211]]],11]]],0,0,[0],[2],[71]],[[[3,"eliteEnemy1_13",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{"HAS_SECOND_UV":true}],[[[{"alphaThreshold":0,"roughness":0.800000011920929,"metallic":0.200000002980232},"mainColor",8,[4,4292401407],"albedoScale",8,[1,0.980000019073486,0.808499991893768,0.685999989509583]]],11]]],0,0,[0],[2],[1]],[[[3,"eliteEnemy1_6",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{"HAS_SECOND_UV":true}],[[[{"alphaThreshold":0,"roughness":0.800000011920929,"metallic":0.200000002980232},"mainColor",8,[4,4289309163],"albedoScale",8,[1,0.649999976158142,0.318500012159348,0.318500012159348]]],11]]],0,0,[0],[2],[1]],[[[16,"enemyBullet1_0"],[30,"enemyBullet1_0",[-3],[[47,-2,[1,"baotdum3ZOMLlWwRTKetnE"],3]],[0,"51bCaKb8lMPL0b0StgYtsy",null,null,null,-1,0],[1,-14.482,1.715,1.959]],[9,"IronHook",1,[[10,-4,[1,"3929ZbGk9ITqLNG1BKoLnm"],[0,1],[2],2]],[0,"f6JN4KWs5NW7N0jfEN2/8i",null,null,null,1,0],[1,0,0,0.313],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,2,2,2],[1,-90,0,0]]],0,[0,4,1,0,0,1,0,-1,2,0,0,2,0,6,1,4],[0,0,0,0],[-1,-2,1,7],[18,19,20,22]]]]
